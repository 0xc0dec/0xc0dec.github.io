{"version":3,"sources":["webpack:///page-component---src-pages-odd-cpp-js-0363c2151dc78f5033e0.js","webpack:///./src/pages/odd-cpp.js?9263"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"plugins\":[\"D:/dev/website-src/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"D:/dev/website-src/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"presets\":[\"D:/dev/website-src/node_modules/babel-preset-env/lib/index.js\",\"D:/dev/website-src/node_modules/babel-preset-stage-0/lib/index.js\",\"D:/dev/website-src/node_modules/babel-preset-react/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/odd-cpp.js","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","title","date","undefined","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_code","_code2","_comments","_comments2","_pageTitle","_pageTitle2","_paragraph","_paragraph2","_link","_link2","_inlineCode","_inlineCode2","Page","_React$Component","this","getPrototypeOf","apply","arguments","createElement","text","lang","to","Component"],"mappings":"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","file":"page-component---src-pages-odd-cpp-js-0363c2151dc78f5033e0.js","sourcesContent":["webpackJsonp([8002428301075783000],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"D:/dev/website-src/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"presets\\\":[\\\"D:/dev/website-src/node_modules/babel-preset-env/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-preset-react/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/odd-cpp.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t                value: true\n\t});\n\texports.title = exports.date = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _code = __webpack_require__(\"./src/shared/code.js\");\n\t\n\tvar _code2 = _interopRequireDefault(_code);\n\t\n\tvar _comments = __webpack_require__(\"./src/shared/comments.js\");\n\t\n\tvar _comments2 = _interopRequireDefault(_comments);\n\t\n\tvar _pageTitle = __webpack_require__(\"./src/shared/page-title.js\");\n\t\n\tvar _pageTitle2 = _interopRequireDefault(_pageTitle);\n\t\n\tvar _paragraph = __webpack_require__(\"./src/shared/paragraph.js\");\n\t\n\tvar _paragraph2 = _interopRequireDefault(_paragraph);\n\t\n\tvar _link = __webpack_require__(\"./src/shared/link.js\");\n\t\n\tvar _link2 = _interopRequireDefault(_link);\n\t\n\tvar _inlineCode = __webpack_require__(\"./src/shared/inline-code.js\");\n\t\n\tvar _inlineCode2 = _interopRequireDefault(_inlineCode);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar date = exports.date = '09 Mar 2013';\n\tvar title = exports.title = 'Something you probably didnâ€™t know about C/C++';\n\t\n\tvar Page = function (_React$Component) {\n\t                _inherits(Page, _React$Component);\n\t\n\t                function Page() {\n\t                                _classCallCheck(this, Page);\n\t\n\t                                return _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).apply(this, arguments));\n\t                }\n\t\n\t                _createClass(Page, [{\n\t                                key: 'render',\n\t                                value: function render() {\n\t                                                return _react2.default.createElement(\n\t                                                                'div',\n\t                                                                null,\n\t                                                                _react2.default.createElement(_pageTitle2.default, { text: title, date: date }),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'I love to collect mind-blowing and not too widely known C/C++ language constructions and facts. This post carries my collection and will be updated when new entries appear.'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C/C++'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// zero-sized bit fields\\nstruct S\\n{\\n  int a;\\n  int b:2;\\n  int c:6,\\n  :0;\\n  int d;\\n};'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// Exit code when there\\'s no return statement?\\n#include <stdio.h>\\nint main()\\n{\\n  printf(\"Test\\\\n\");\\n}\\n\\n// The program exit code will be... ? 5. When there is no return statement,\\n// the program will return the result of the last executed function.\\n// In this case it is 5, because printf returns the number of symbols actually printed.'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C/C++'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// a[b] is practically the same as *(a + b)\\nchar c = 4[\"Hello, world!\"]; // c == \\'o\\''\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C/C++'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'int x = 33;\\nint f()\\n{\\n  int x = 1045;\\n  {\\n    return x; // returns 1045\\n  }\\n}\\n\\nint x = 33;\\nint f()\\n{\\n  int x = 1045;\\n  {\\n    extern int x;\\n    return x; // returns 33\\n  }\\n}'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// Passed array must have at least 10 elements (-Warray-bounds):\\nvoid f(int arr[static 10]) { }\\n\\n// Free compile-time not-NULL check [-Wnonnull]\\nvoid f(int arr[static 1]) { }'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'int x = \\'FOO!\\'; // single quotes! codepad.org compiler says x == 1179602721'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C/C++'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'int x = y+++z; // parsed as y++ + z (\"greedy lexer rule\")\\nint a = b+++++c; // b++ ++ + c, not b++ + ++c'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// The shortest C-program that compiles and links. With a warning. Do not run!\\nmain;\\n// No warnings. Do not run either!\\nint main;'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// Old-style function definition\\nint main(argc, argv)\\nint argc;\\nchar *argv[];\\n{\\n  return 0;\\n}'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'return ((int []){1,2,3,4})[1];\\n// returns 2'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// Initializer with designators hell\\nstruct {\\n   int x;\\n   struct {\\n       int y, z;\\n   } nested;\\n} i = { .nested.y = 5, 6, .x = 1, 2 };\\n// i.nested.y == 2, i.nested.z == 6'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'GCC C-only'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// omit second component of ?: operator\\nextern int f();\\nreturn f() ? : -1; // Returns f() if it\\'s not zero, or -1 otherwise. Reminds me of C# operator ??'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'C/C++'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// zero-sized bit fields\\nstruct S\\n{\\n  int a;\\n  int b:2;\\n  int c:6,\\n  :0;\\n  int d;\\n};'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'Most interesting parts of ',\n\t                                                                                _react2.default.createElement(\n\t                                                                                                _link2.default,\n\t                                                                                                { to: 'http://nickdesaulniers.github.io/blog/2013/07/25/designated-initialization-with-pointers-in-c/' },\n\t                                                                                                'this'\n\t                                                                                ),\n\t                                                                                ' article about designated initialization in C:'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'struct point\\n{\\n  int x, y;\\n};\\n// ...\\nstruct point p = { 1, 2 } // ok, p now has coordinates (1, 2)'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'struct point p = { .y = 1, .x = 2 } // ok, p now has coordinates (2, 1)'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// Re-assign? No problems, but tricky\\nstruct point p = { .x = 1, .y = 2 };\\n// ...\\np = { .x = 10, .y = 20 }; // compilation error\\np = (struct point){ .x = 10, .y = 20 }; // works\\np = (struct point){ 10, 20 }; // this works too'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'int distance(struct point a, struct point b);\\n// ...\\ndistance({ 1, 2 }, { 3, 4 }); // no-no, compilation error\\ndistance((struct point){ 1, 2 }, (struct point) { 3, 4 }); // fine, this compiles'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                '// Initializing pointer members\\nstruct node\\n{\\n  char *value;\\n  struct node *next;\\n};\\n// ...\\nstruct node n =\\n{\\n  .value = \"Hello, world!\",\\n  .next = (&(struct node) { .value = \"Next node\" }) // wow!\\n}'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'Empty declarations in C:'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'typedef;\\nint typedef const;'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'Won\\u2019t compile with ',\n\t                                                                                _react2.default.createElement(\n\t                                                                                                _inlineCode2.default,\n\t                                                                                                null,\n\t                                                                                                '-Wall'\n\t                                                                                ),\n\t                                                                                ' though.'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'Some people write such code probably hoping that C/C++ has native support for tuples. No, it doesn\\u2019t.'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'int func()\\n{\\n    int a = 1;\\n    int b = 2;\\n    int c = 3;\\n    return (a, b, c);\\n}\\n\\n// ...\\n\\nint d = func(); // d == c == 3, if () operator is not overloaded'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _paragraph2.default,\n\t                                                                                null,\n\t                                                                                'This construction is strange in a way that you probably won\\u2019t encounter it very often. For some reasons it\\u2019s not commonly used. The ',\n\t                                                                                _react2.default.createElement(\n\t                                                                                                _link2.default,\n\t                                                                                                { to: 'http://en.cppreference.com/w/cpp/language/function-try-block' },\n\t                                                                                                'function-try-block'\n\t                                                                                ),\n\t                                                                                ':'\n\t                                                                ),\n\t                                                                _react2.default.createElement(\n\t                                                                                _code2.default,\n\t                                                                                { lang: 'c++' },\n\t                                                                                'int f(int n = 2) try {\\n  ++n; // increments the function parameter\\n  throw n;\\n} catch(...) {\\n  ++n; // n is in scope and still refers to the function parameter\\n  assert(n == 4);\\n  return n;\\n}'\n\t                                                                ),\n\t                                                                _react2.default.createElement(_comments2.default, null)\n\t                                                );\n\t                                }\n\t                }]);\n\t\n\t                return Page;\n\t}(_react2.default.Component);\n\t\n\texports.default = Page;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// page-component---src-pages-odd-cpp-js-0363c2151dc78f5033e0.js","import React from 'react';\r\nimport Code from './../shared/code';\r\nimport Comments from './../shared/comments';\r\nimport PageTitle from './../shared/page-title';\r\nimport Paragraph from './../shared/paragraph';\r\nimport Link from './../shared/link';\r\nimport InlineCode from './../shared/inline-code';\r\n\r\nexport const date = '09 Mar 2013';\r\nexport const title = 'Something you probably didnâ€™t know about C/C++';\r\n\r\nexport default class Page extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageTitle text={title} date={date}/>\r\n\r\n                <Paragraph>\r\n                    I love to collect mind-blowing and not too widely known C/C++\r\n                    language constructions and facts. This post carries my collection and will\r\n                    be updated when new entries appear.\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                    C/C++\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// zero-sized bit fields\r\nstruct S\r\n{\r\n  int a;\r\n  int b:2;\r\n  int c:6,\r\n  :0;\r\n  int d;\r\n};`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// Exit code when there's no return statement?\r\n#include <stdio.h>\r\nint main()\r\n{\r\n  printf(\"Test\\\\n\");\r\n}\r\n\r\n// The program exit code will be... ? 5. When there is no return statement,\r\n// the program will return the result of the last executed function.\r\n// In this case it is 5, because printf returns the number of symbols actually printed.`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C/C++\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// a[b] is practically the same as *(a + b)\r\nchar c = 4[\"Hello, world!\"]; // c == 'o'`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C/C++\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`int x = 33;\r\nint f()\r\n{\r\n  int x = 1045;\r\n  {\r\n    return x; // returns 1045\r\n  }\r\n}\r\n\r\nint x = 33;\r\nint f()\r\n{\r\n  int x = 1045;\r\n  {\r\n    extern int x;\r\n    return x; // returns 33\r\n  }\r\n}`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// Passed array must have at least 10 elements (-Warray-bounds):\r\nvoid f(int arr[static 10]) { }\r\n\r\n// Free compile-time not-NULL check [-Wnonnull]\r\nvoid f(int arr[static 1]) { }`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`int x = 'FOO!'; // single quotes! codepad.org compiler says x == 1179602721`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C/C++\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`int x = y+++z; // parsed as y++ + z (\"greedy lexer rule\")\r\nint a = b+++++c; // b++ ++ + c, not b++ + ++c`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// The shortest C-program that compiles and links. With a warning. Do not run!\r\nmain;\r\n// No warnings. Do not run either!\r\nint main;`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// Old-style function definition\r\nint main(argc, argv)\r\nint argc;\r\nchar *argv[];\r\n{\r\n  return 0;\r\n}`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`return ((int []){1,2,3,4})[1];\r\n// returns 2`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// Initializer with designators hell\r\nstruct {\r\n   int x;\r\n   struct {\r\n       int y, z;\r\n   } nested;\r\n} i = { .nested.y = 5, 6, .x = 1, 2 };\r\n// i.nested.y == 2, i.nested.z == 6`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    GCC C-only\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// omit second component of ?: operator\r\nextern int f();\r\nreturn f() ? : -1; // Returns f() if it's not zero, or -1 otherwise. Reminds me of C# operator ??`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    C/C++\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`// zero-sized bit fields\r\nstruct S\r\n{\r\n  int a;\r\n  int b:2;\r\n  int c:6,\r\n  :0;\r\n  int d;\r\n};`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    Most interesting parts\r\n                    of <Link to=\"http://nickdesaulniers.github.io/blog/2013/07/25/designated-initialization-with-pointers-in-c/\">this</Link> article\r\n                    about designated initialization in C:\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`struct point\r\n{\r\n  int x, y;\r\n};\r\n// ...\r\nstruct point p = { 1, 2 } // ok, p now has coordinates (1, 2)`}\r\n                </Code>\r\n\r\n                <Code lang=\"c++\">\r\n{`struct point p = { .y = 1, .x = 2 } // ok, p now has coordinates (2, 1)`}\r\n                </Code>\r\n\r\n                <Code lang=\"c++\">\r\n{`// Re-assign? No problems, but tricky\r\nstruct point p = { .x = 1, .y = 2 };\r\n// ...\r\np = { .x = 10, .y = 20 }; // compilation error\r\np = (struct point){ .x = 10, .y = 20 }; // works\r\np = (struct point){ 10, 20 }; // this works too`}\r\n                </Code>\r\n\r\n                <Code lang=\"c++\">\r\n{`int distance(struct point a, struct point b);\r\n// ...\r\ndistance({ 1, 2 }, { 3, 4 }); // no-no, compilation error\r\ndistance((struct point){ 1, 2 }, (struct point) { 3, 4 }); // fine, this compiles`}\r\n                </Code>\r\n\r\n                <Code lang=\"c++\">\r\n{`// Initializing pointer members\r\nstruct node\r\n{\r\n  char *value;\r\n  struct node *next;\r\n};\r\n// ...\r\nstruct node n =\r\n{\r\n  .value = \"Hello, world!\",\r\n  .next = (&(struct node) { .value = \"Next node\" }) // wow!\r\n}`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    Empty declarations in C:\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`typedef;\r\nint typedef const;`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    Wonâ€™t compile with <InlineCode>-Wall</InlineCode> though.\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                    Some people write such code probably hoping that C/C++ has native support for tuples. No, it doesnâ€™t.\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`int func()\r\n{\r\n    int a = 1;\r\n    int b = 2;\r\n    int c = 3;\r\n    return (a, b, c);\r\n}\r\n\r\n// ...\r\n\r\nint d = func(); // d == c == 3, if () operator is not overloaded`}\r\n                </Code>\r\n\r\n                <Paragraph>\r\n                    This construction is strange in a way that you probably\r\n                    wonâ€™t encounter it very often. For some reasons itâ€™s\r\n                    not commonly used. The <Link to=\"http://en.cppreference.com/w/cpp/language/function-try-block\">function-try-block</Link>:\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`int f(int n = 2) try {\r\n  ++n; // increments the function parameter\r\n  throw n;\r\n} catch(...) {\r\n  ++n; // n is in scope and still refers to the function parameter\r\n  assert(n == 4);\r\n  return n;\r\n}`}\r\n                </Code>\r\n\r\n                <Comments/>\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/odd-cpp.js"],"sourceRoot":""}