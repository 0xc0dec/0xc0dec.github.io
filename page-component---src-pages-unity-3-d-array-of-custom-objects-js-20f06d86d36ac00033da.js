webpackJsonp([0x2a75bf2a6d3fc200],{'./node_modules/babel-loader/lib/index.js?{"plugins":["D:/dev/website-src/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js","D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js","D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js","D:/dev/website-src/node_modules/babel-plugin-transform-object-assign/lib/index.js"],"presets":["D:/dev/website-src/node_modules/babel-preset-env/lib/index.js","D:/dev/website-src/node_modules/babel-preset-stage-0/lib/index.js","D:/dev/website-src/node_modules/babel-preset-react/lib/index.js"],"cacheDirectory":true}!./src/pages/unity3d-array-of-custom-objects.js':function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),t.title=t.date=void 0;var s=function(){function e(e,t){for(var n=0;n<t.length;n++){var l=t[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}return function(t,n,l){return n&&e(t.prototype,n),l&&e(t,l),t}}(),i=n("./node_modules/react/react.js"),u=l(i),d=n("./src/shared/code.js"),c=l(d),f=n("./src/shared/comments.js"),p=l(f),b=n("./src/shared/page-title.js"),m=l(b),h=n("./src/shared/paragraph.js"),y=l(h),j=n("./src/shared/inline-code.js"),g=l(j),v=t.date="05 May 2013",_=t.title="Unity3D tip: edit arrays of custom objects in object inspector",w=function(e){function t(){return r(this,t),o(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return a(t,e),s(t,[{key:"render",value:function(){return u.default.createElement("div",null,u.default.createElement(m.default,{text:_,date:v}),u.default.createElement(y.default,null,"Say I have the following component:"),u.default.createElement(c.default,{lang:"csharp"},"public class Test: MonoBehaviour\n{\n    public Vector3[] PivotPoints;\n}"),u.default.createElement(y.default,null,"It’s OK to edit the ",u.default.createElement(g.default,null,"PivotPoints")," field in object inspector, because Unity natively understands ",u.default.createElement(g.default,null,"Vector3")," struct and displays it properly. Things get more complicated when I add field representing an array of custom objects:"),u.default.createElement(c.default,{lang:"csharp"},"class NodeSetup\n{\n    public Vector3 Position;\n    public Vector3 Weight;\n}\n\n// ...\n\npublic class Test: MonoBehaviour\n{\n    public Vector3[] PivotPoints;\n    public NodeSetup[] NodeSetups;\n}"),u.default.createElement(y.default,null,"Unity ignores field ",u.default.createElement(g.default,null,"NodeSetups"),". First I thought I should write a custom editor in order to edit such fields. Fortunately the problem has simple solution – just mark your custom class with ",u.default.createElement(g.default,null,"Serializable")," attribute:"),u.default.createElement(c.default,{lang:"csharp"},"[Serializable]\nclass NodeSetup\n{ ... }"),u.default.createElement(p.default,null))}}]),t}(u.default.Component);t.default=w}});
//# sourceMappingURL=page-component---src-pages-unity-3-d-array-of-custom-objects-js-20f06d86d36ac00033da.js.map