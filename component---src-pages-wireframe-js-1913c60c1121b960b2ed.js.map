{"version":3,"sources":["webpack:///./src/components/List.js","webpack:///./src/pages/wireframe.js","webpack:///./src/img/wireframe/screenshot3.png","webpack:///./src/img/wireframe/screenshot2.png","webpack:///./src/img/wireframe/screenshot1.png","webpack:///./src/components/Screenshots.js"],"names":["List","styled","ul","withConfig","displayName","componentId","ListItem","li","Wireframe","React","createElement","Layout","subtitle","Cell","CellTitle","Para","href","Screenshots","urls","screenshot1","screenshot2","screenshot3","module","exports","Root","div","Image","img","_React$PureComponent","apply","arguments","_inheritsLoose","prototype","render","this","props","map","u","idx","key","src","PureComponent"],"mappings":"8FAAA,oFAEO,MAAMA,EAAOC,IAAOC,GAAEC,WAAA,CAAAC,YAAA,OAAAC,YAAA,gBAATJ,CAAS,wBAIhBK,EAAWL,IAAOM,GAAEJ,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAATJ,CAAS,uB,oCCNjC,2JA2DeO,UAhDGA,IACdC,IAAAC,cAACC,IAAM,CAACC,SAAU,aACdH,IAAAC,cAACG,IAAI,KACDJ,IAAAC,cAACI,IAAS,KAAC,aAEXL,IAAAC,cAACK,IAAI,KAAC,yQAMNN,IAAAC,cAACK,IAAI,KACDN,IAAAC,cAAA,KAAGM,KAAK,sDAAqD,mCAAmC,KAGpGP,IAAAC,cAACK,IAAI,KAAC,aAENN,IAAAC,cAACV,IAAI,KACDS,IAAAC,cAACJ,IAAQ,KAAC,4CAIVG,IAAAC,cAACJ,IAAQ,KAAC,6PAMVG,IAAAC,cAACJ,IAAQ,KAAC,2CAIVG,IAAAC,cAACJ,IAAQ,KAAC,+WASdG,IAAAC,cAACK,IAAI,KACDN,IAAAC,cAACO,IAAW,CAACC,KAAM,CAACC,IAAaC,IAAaC,W,qBCrD9DC,EAAOC,QAAU,IAA0B,2D,qBCA3CD,EAAOC,QAAU,IAA0B,2D,qBCA3CD,EAAOC,QAAU,IAA0B,2D,qHCG3C,MAAMC,EAAOvB,IAAOwB,IAAGtB,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAVJ,CAAU,uFAOjByB,EAAQzB,IAAO0B,IAAGxB,WAAA,CAAAC,YAAA,qBAAAC,YAAA,YAAVJ,CAAU,iBAEtB,IAEmBgB,EAAW,SAAAW,GAAA,SAAAX,IAAA,OAAAW,EAAAC,MAAA,KAAAC,YAAA,KAa3B,OAb2BC,YAAAd,EAAAW,GAAAX,EAAAe,UAC5BC,OAAA,WACI,MAAM,KAAEf,GAASgB,KAAKC,MAEtB,OACI1B,IAAAC,cAACc,EAAI,KACAN,EAAKkB,IAAI,CAACC,EAAGC,IACV7B,IAAAC,cAAA,OAAK6B,IAAKD,GACN7B,IAAAC,cAACgB,EAAK,CAACc,IAAKH,QAK/BpB,EAb2B,CAASR,IAAMgC","file":"component---src-pages-wireframe-js-1913c60c1121b960b2ed.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n    padding-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n    margin-top: 10px;\r\n`;","import React from \"react\";\n\nimport { Cell, CellTitle } from \"../components/Cell\";\nimport Layout from \"../components/Layout\";\nimport Para from \"../components/Paragraph\";\nimport Screenshots from \"../components/Screenshots\";\nimport { List, ListItem } from \"../components/List\";\nimport screenshot1 from \"../img/wireframe/screenshot1.png\";\nimport screenshot2 from \"../img/wireframe/screenshot2.png\";\nimport screenshot3 from \"../img/wireframe/screenshot3.png\";\n\nconst Wireframe = () => (\n    <Layout subtitle={\"Wireframe\"}>\n        <Cell>\n            <CellTitle>Wireframe</CellTitle>\n\n            <Para>\n                A collection of shaders and materials for high-quality wireframe rendering in Unity.\n                The package relies on geometry shaders so currently it runs only on Windows and\n                DX10-compatible video cards. Geometry shaders are not yet supported by Unity on Linux and macOS.\n            </Para>\n\n            <Para>\n                <a href=\"https://www.assetstore.unity3d.com/#/content/11638\">Download from Unity Asset Store</a>.\n            </Para>\n\n            <Para>Features:</Para>\n\n            <List>\n                <ListItem>\n                    Antialiased lines with adjustable width.\n                </ListItem>\n\n                <ListItem>\n                    Lines are calculated in window space and don’t depend on object’s distance from the camera.\n                    The farther the object is from the camera, the denser its wireframe.\n                    This behavior is the same as for classic wireframe (used, for example, in Unity editor).\n                </ListItem>\n\n                <ListItem>\n                    Deferred and forward rendering support.\n                </ListItem>\n\n                <ListItem>\n                    Six example materials, including single side, two-sided, solid (wireframe + fill color).\n                    Wireframe material can be mixed with any other material by simply assigning two (or more)\n                    materials to the same object. This requires at least two draw calls though.\n                    For simple wireframe rendering with fill color there is a shader included that\n                    requires only one draw call.\n                </ListItem>\n            </List>\n\n            <Para>\n                <Screenshots urls={[screenshot1, screenshot2, screenshot3]}/>\n            </Para>\n        </Cell>\n    </Layout>\n);\n\nexport default Wireframe;\n","module.exports = __webpack_public_path__ + \"static/screenshot3-7baa697a3787450a69eff89f216d4213.png\";","module.exports = __webpack_public_path__ + \"static/screenshot2-0c928fae1d28e339a5c447ea47e6df3a.png\";","module.exports = __webpack_public_path__ + \"static/screenshot1-e3eeb7b808d7081e7c36a2ed96f3e96a.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Root = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n`;\r\n\r\nexport default class Screenshots extends React.PureComponent {\r\n    render() {\r\n        const { urls } = this.props;\r\n\r\n        return (\r\n            <Root>\r\n                {urls.map((u, idx) =>\r\n                    <div key={idx}>\r\n                        <Image src={u}/>\r\n                    </div>\r\n                )}\r\n            </Root>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}