---
layout: page
title:  Статическая линковка Visual Studio Runtime
date:   2011-02-06 00:00:00
---

Распространенная проблема у начинающих: собранный со стандартными настройками в Visual Studio проект
на С/С++ не запускается на другом компьютере. Причина кроется в том, что исполняемый файл цепляет
стандартные библиотеки языков С и С++, которые по умолчанию линкуются динамически. В состав Windows
эти библиотеки не входят, зато поставляются вместе со студией, либо устанавливаются отдельно пакетом
Visual Studio Redistributable соответствующей версии. Вы могли замечать, что инсталляторы некоторых программ
в процессе работы ставят такой пакет – как раз из-за библиотек.

<!--break-->

Есть несколько способов решить проблему:

<ul>
<li>Заставлять пользователя устанавливать пакет. Утверждается, что установленные таким образом библиотеки обновляются
вместе с виндой, поэтому у пользователя всегда самая свежая версия с закрытыми дырами в безопасности, поправленными
старыми багами (и добавленными новыми). Как бы там ни твердили, что это круто, я так не считаю, по двум причинам.
Во-первых, надо заставлять пользователя устанавливать какую-то неведомую для него хрень. Т.к. все пишут в разных
версиях Visual Studio, то и библиотеки требуют от пользователя тоже разных версий. Со временем все это копится на
компьютере и начинает выглядеть как мусор:

<div class="row text-center"><img src="/data/redistr.png" class="margined20"/></div>

Во-вторых, если твоя программа протестирована с конкретной версией библиотеки, то это еще не значит, что новая версия
не добавит новых багов, и программа и дальше будет работать нормально. Всегда есть вероятность того, что после очередного
обновления библиотек программа просто сдохнет.
</li>

<li>Вместе с исполняемым файлом распространять файлы библиотек из папки `C:\Program Files\Microsoft Visual Studio 9.0\VC\redist\x86\Microsoft.VC90.CRT\`
(или аналогичных, соответствующих архитектуре и версии компилятора). Этот способ так часто используется, что для меня уже стало своего рода развлечением
заглядывать в папки с новыми программами и искать там те самые DLL-ки. Несколько примеров:

<div class="row text-center"><img src="/data/example1.png" class="margined20"/></div>
<div class="row text-center"><img src="/data/example2.png" class="margined20"/></div>
<div class="row text-center"><img src="/data/example3.png" class="margined20"/></div>
<div class="row text-center"><img src="/data/example4.png" class="margined20"/></div>
<div class="row text-center"><img src="/data/example5.png" class="margined20"/></div>

</li>

<li>
Линковать библиотеки статически. Отличный способ для любитей минимализма (я в их числе). В настройках проекта в пункте
`Project -> Properties -> Configuration Properties -> C/C++ -> Code Generation -> Runtime Library` указать опцию,
не содержащую “DLL” (в зависимости от Debug или Release версии). Можно убедиться, что библиотеки не линкуются динамически,
запустив проект в студии и заглянув в окошко Modules. В консольном проекте в Visual Studio Express 2010 у меня там 3 библиотеки:
ntdll.dll, kernel32.dll и KernelBase.dll. Если оставить динамическую линковку, к ним добавляются msvcp100.dll (C++ рантайм) и msvcr100.dll (С рантайм).
</li>

</ul>