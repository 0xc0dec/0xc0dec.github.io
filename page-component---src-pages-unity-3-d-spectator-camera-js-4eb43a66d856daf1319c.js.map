{"version":3,"sources":["webpack:///page-component---src-pages-unity-3-d-spectator-camera-js-4eb43a66d856daf1319c.js","webpack:///./src/pages/unity3d-spectator-camera.js?1b96"],"names":["webpackJsonp","./node_modules/babel-loader/lib/index.js?{\"plugins\":[\"D:/dev/website-src/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\",\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\",\"D:/dev/website-src/node_modules/babel-plugin-transform-object-assign/lib/index.js\"],\"presets\":[\"D:/dev/website-src/node_modules/babel-preset-env/lib/index.js\",\"D:/dev/website-src/node_modules/babel-preset-stage-0/lib/index.js\",\"D:/dev/website-src/node_modules/babel-preset-react/lib/index.js\"],\"cacheDirectory\":true}!./src/pages/unity3d-spectator-camera.js","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","title","date","undefined","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_react","_react2","_code","_code2","_comments","_comments2","_pageTitle","_pageTitle2","_paragraph","_paragraph2","Page","_React$Component","this","getPrototypeOf","apply","arguments","createElement","text","lang","Component"],"mappings":"AAAAA,cAAc,qBAERC,+oBACA,SAAUC,EAAQC,EAASC,GAEhC,YA6BA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASG,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMC,GAAQ,IAAKD,EAAQ,KAAM,IAAIE,gBAAe,4DAAgE,QAAOD,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BD,EAAPC,EAElO,QAASE,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIP,WAAU,iEAAoEO,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GAjCjeE,OAAOS,eAAe3B,EAAS,cAC3BqB,OAAO,IAEXrB,EAAQ4B,MAAQ5B,EAAQ6B,KAAOC,MAE/B,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWf,WAAae,EAAWf,aAAc,EAAOe,EAAWb,cAAe,EAAU,SAAWa,KAAYA,EAAWd,UAAW,GAAML,OAAOS,eAAeM,EAAQI,EAAWC,IAAKD,IAAiB,MAAO,UAAU7B,EAAa+B,EAAYC,GAAiJ,MAA9HD,IAAYP,EAAiBxB,EAAYS,UAAWsB,GAAiBC,GAAaR,EAAiBxB,EAAagC,GAAqBhC,MCZjiBiC,EAAAxC,EAAA,iCDgBKyC,EAAUxC,EAAuBuC,GCftCE,EAAA1C,EAAA,wBDmBK2C,EAAS1C,EAAuByC,GClBrCE,EAAA5C,EAAA,4BDsBK6C,EAAa5C,EAAuB2C,GCrBzCE,EAAA9C,EAAA,8BDyBK+C,EAAc9C,EAAuB6C,GCxB1CE,EAAAhD,EAAA,6BD4BKiD,EAAchD,EAAuB+C,GC1B7BpB,SAAO,cACPD,UAAQ,4DAEAuB,EDoCT,SAAUC,GAGjB,QAASD,KAGL,MAFA7C,GAAgB+C,KAAMF,GAEfzC,EAA2B2C,MAAOF,EAAKzB,WAAaR,OAAOoC,eAAeH,IAAOI,MAAMF,KAAMG,YAmCxG,MAxCA1C,GAAUqC,EAAMC,GAQhBrB,EAAaoB,IACTb,IAAK,SACLjB,MAAO,WC7CR,MACIqB,GAAArC,QAAAoD,cAAA,WACIf,EAAArC,QAAAoD,cAAAT,EAAA3C,SAAWqD,KAAM9B,EAAOC,KAAMA,IAE9Ba,EAAArC,QAAAoD,cAAAP,EAAA7C,QAAA,0NAMAqC,EAAArC,QAAAoD,cAAAP,EAAA7C,QAAA,sgBASAqC,EAAArC,QAAAoD,cAAAP,EAAA7C,QAAA,8RAOAqC,EAAArC,QAAAoD,cAAAb,EAAAvC,SAAMsD,KAAK,OAAX,osDA8DAjB,EAAArC,QAAAoD,cAAAX,EAAAzC,QAAA,WDbJ8C,GC7EsBT,EAAArC,QAAMuD,UDgFvC5D,GAAQK,QChFY8C","file":"page-component---src-pages-unity-3-d-spectator-camera-js-4eb43a66d856daf1319c.js","sourcesContent":["webpackJsonp([7013240841797279000],{\n\n/***/ \"./node_modules/babel-loader/lib/index.js?{\\\"plugins\\\":[\\\"D:/dev/website-src/node_modules/gatsby/dist/utils/babel-plugin-extract-graphql.js\\\",\\\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-plugin-add-module-exports/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-plugin-transform-object-assign/lib/index.js\\\"],\\\"presets\\\":[\\\"D:/dev/website-src/node_modules/babel-preset-env/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-preset-stage-0/lib/index.js\\\",\\\"D:/dev/website-src/node_modules/babel-preset-react/lib/index.js\\\"],\\\"cacheDirectory\\\":true}!./src/pages/unity3d-spectator-camera.js\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.title = exports.date = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(\"./node_modules/react/react.js\");\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _code = __webpack_require__(\"./src/shared/code.js\");\n\t\n\tvar _code2 = _interopRequireDefault(_code);\n\t\n\tvar _comments = __webpack_require__(\"./src/shared/comments.js\");\n\t\n\tvar _comments2 = _interopRequireDefault(_comments);\n\t\n\tvar _pageTitle = __webpack_require__(\"./src/shared/page-title.js\");\n\t\n\tvar _pageTitle2 = _interopRequireDefault(_pageTitle);\n\t\n\tvar _paragraph = __webpack_require__(\"./src/shared/paragraph.js\");\n\t\n\tvar _paragraph2 = _interopRequireDefault(_paragraph);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar date = exports.date = '28 Nov 2012';\n\tvar title = exports.title = 'Unity3d tip: spectator and FPS camera without overturning';\n\t\n\tvar Page = function (_React$Component) {\n\t    _inherits(Page, _React$Component);\n\t\n\t    function Page() {\n\t        _classCallCheck(this, Page);\n\t\n\t        return _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Page, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return _react2.default.createElement(\n\t                'div',\n\t                null,\n\t                _react2.default.createElement(_pageTitle2.default, { text: title, date: date }),\n\t                _react2.default.createElement(\n\t                    _paragraph2.default,\n\t                    null,\n\t                    'It\\u2019s pretty simple to code a camera to move in a spectator-like (and FPS) fashion. The only trick you should do to make this movement production-ready is to restrict camera movement around the horizontal axis.'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _paragraph2.default,\n\t                    null,\n\t                    'Basically, spectator camera rotates either \\u201Cleft-right\\u201D (around global vertical Z axis), or \\u201Cup-down\\u201D (around its local X axis). This local X axis is always horizontal, i.e. lies in XZ global plane. When a camera rotates around this axis, the player looks up or down. This leads to a camera overturning problem when he tries to look upper and upper, or lower and lower. All games you\\u2019ve seen so far restrict this movement, so that the camera can only look vertically up or vertically down in the \\u201Cworst case\\u201D.'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _paragraph2.default,\n\t                    null,\n\t                    'Below is the code I use in my projects for a spectator and FPS cameras. It\\u2019s not ideal, because it restricts vertical rotation approximately, so that the camera stops rotating when it almost reached the vertical axis. Approximation amount is adjustable. Anyway, it does the job'\n\t                ),\n\t                _react2.default.createElement(\n\t                    _code2.default,\n\t                    { lang: 'c++' },\n\t                    'using UnityEngine;\\n\\npublic class FreeLook : MonoBehaviour\\n{\\n    public float rotationSpeed = 0.05f;\\n    public float normalSpeed = 10;\\n    public float highSpeed = 20;\\n\\n    private bool _ownCursor = false;\\n\\n    private void Start()\\n    {\\n        if (!Screen.lockCursor && Screen.showCursor)\\n        {\\n            Screen.lockCursor = true;\\n            Screen.showCursor = false;\\n            _ownCursor = true;\\n        }\\n    }\\n\\n    private void OnDisable()\\n    {\\n        if (_ownCursor)\\n        {\\n            Screen.lockCursor = false;\\n            Screen.showCursor = true;\\n        }\\n    }\\n\\n    private void Update()\\n    {\\n        Vector3 dp = Vector3.zero;\\n\\n        if (Input.GetKey(KeyCode.W)) dp.z = 1;\\n        if (Input.GetKey(KeyCode.S)) dp.z = -1;\\n        if (Input.GetKey(KeyCode.A)) dp.x = -1;\\n        if (Input.GetKey(KeyCode.D)) dp.x = 1;\\n        if (Input.GetKey(KeyCode.Q)) dp.y = -1;\\n        if (Input.GetKey(KeyCode.E)) dp.y = 1;\\n\\n        var speed = normalSpeed * (Input.GetKey(KeyCode.LeftShift) ? 5 : 1);\\n\\n        dp.Normalize();\\n        dp *= speed * Time.deltaTime;\\n        camera.transform.Translate(dp.x, dp.y, dp.z, Space.Self);\\n\\n        float rotY = rotationSpeed * Input.GetAxis(\"Mouse X\");\\n        float rotX = -rotationSpeed * Input.GetAxis(\"Mouse Y\");\\n\\n        float toTop = Vector3.Angle(camera.transform.forward, Vector3.up);\\n        if (rotX < 0)\\n            rotX = -Mathf.Min(Mathf.Abs(rotX), Mathf.Max(0, toTop - 20));\\n        else\\n            rotX = Mathf.Min(Mathf.Abs(rotX), Mathf.Max(0, 160 - toTop));\\n\\n        camera.transform.RotateAround(Vector3.up, rotY);\\n        camera.transform.RotateAround(camera.transform.right, rotX);\\n    }\\n}'\n\t                ),\n\t                _react2.default.createElement(_comments2.default, null)\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Page;\n\t}(_react2.default.Component);\n\t\n\texports.default = Page;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// page-component---src-pages-unity-3-d-spectator-camera-js-4eb43a66d856daf1319c.js","import React from 'react';\r\nimport Code from './../shared/code';\r\nimport Comments from './../shared/comments';\r\nimport PageTitle from './../shared/page-title';\r\nimport Paragraph from './../shared/paragraph';\r\n\r\nexport const date = '28 Nov 2012';\r\nexport const title = 'Unity3d tip: spectator and FPS camera without overturning';\r\n\r\nexport default class Page extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <PageTitle text={title} date={date}/>\r\n\r\n                <Paragraph>\r\n                    It’s pretty simple to code a camera to move in a spectator-like (and FPS)\r\n                    fashion. The only trick you should do to make this movement production-ready\r\n                    is to restrict camera movement around the horizontal axis.\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                    Basically, spectator camera rotates either “left-right” (around global vertical Z axis),\r\n                    or “up-down” (around its local X axis). This local X axis is always horizontal,\r\n                    i.e. lies in XZ global plane. When a camera rotates around this axis, the player\r\n                    looks up or down. This leads to a camera overturning problem when he tries to look\r\n                    upper and upper, or lower and lower. All games you’ve seen so far restrict this\r\n                    movement, so that the camera can only look vertically up or vertically down in the “worst case”.\r\n                </Paragraph>\r\n\r\n                <Paragraph>\r\n                    Below is the code I use in my projects for a spectator and FPS cameras.\r\n                    It’s not ideal, because it restricts vertical rotation approximately,\r\n                    so that the camera stops rotating when it almost reached the vertical\r\n                    axis. Approximation amount is adjustable. Anyway, it does the job\r\n                </Paragraph>\r\n\r\n                <Code lang=\"c++\">\r\n{`using UnityEngine;\r\n\r\npublic class FreeLook : MonoBehaviour\r\n{\r\n    public float rotationSpeed = 0.05f;\r\n    public float normalSpeed = 10;\r\n    public float highSpeed = 20;\r\n\r\n    private bool _ownCursor = false;\r\n\r\n    private void Start()\r\n    {\r\n        if (!Screen.lockCursor && Screen.showCursor)\r\n        {\r\n            Screen.lockCursor = true;\r\n            Screen.showCursor = false;\r\n            _ownCursor = true;\r\n        }\r\n    }\r\n\r\n    private void OnDisable()\r\n    {\r\n        if (_ownCursor)\r\n        {\r\n            Screen.lockCursor = false;\r\n            Screen.showCursor = true;\r\n        }\r\n    }\r\n\r\n    private void Update()\r\n    {\r\n        Vector3 dp = Vector3.zero;\r\n\r\n        if (Input.GetKey(KeyCode.W)) dp.z = 1;\r\n        if (Input.GetKey(KeyCode.S)) dp.z = -1;\r\n        if (Input.GetKey(KeyCode.A)) dp.x = -1;\r\n        if (Input.GetKey(KeyCode.D)) dp.x = 1;\r\n        if (Input.GetKey(KeyCode.Q)) dp.y = -1;\r\n        if (Input.GetKey(KeyCode.E)) dp.y = 1;\r\n\r\n        var speed = normalSpeed * (Input.GetKey(KeyCode.LeftShift) ? 5 : 1);\r\n\r\n        dp.Normalize();\r\n        dp *= speed * Time.deltaTime;\r\n        camera.transform.Translate(dp.x, dp.y, dp.z, Space.Self);\r\n\r\n        float rotY = rotationSpeed * Input.GetAxis(\"Mouse X\");\r\n        float rotX = -rotationSpeed * Input.GetAxis(\"Mouse Y\");\r\n\r\n        float toTop = Vector3.Angle(camera.transform.forward, Vector3.up);\r\n        if (rotX < 0)\r\n            rotX = -Mathf.Min(Mathf.Abs(rotX), Mathf.Max(0, toTop - 20));\r\n        else\r\n            rotX = Mathf.Min(Mathf.Abs(rotX), Mathf.Max(0, 160 - toTop));\r\n\r\n        camera.transform.RotateAround(Vector3.up, rotY);\r\n        camera.transform.RotateAround(camera.transform.right, rotX);\r\n    }\r\n}`}\r\n                </Code>\r\n\r\n                <Comments/>\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/unity3d-spectator-camera.js"],"sourceRoot":""}